<?php
/**
 * SystemApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Orthanc API
 *
 * This is the full documentation of the [REST API](https://book.orthanc-server.com/users/rest.html) of Orthanc.<p>This reference is automatically generated from the source code of Orthanc. A [shorter cheat sheet](https://book.orthanc-server.com/users/rest-cheatsheet.html) is part of the Orthanc Book.<p>An earlier, manually crafted version from August 2019, is [still available](2019-08-orthanc-openapi.html), but is not up-to-date anymore ([source](https://groups.google.com/g/orthanc-users/c/NUiJTEICSl8/m/xKeqMrbqAAAJ)).
 *
 * The version of the OpenAPI document: 1.11.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SystemApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SystemApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for pluginsExplorerJsGet
     *
     * JavaScript extensions to Orthanc Explorer.
     *
     */
    public function testPluginsExplorerJsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pluginsGet
     *
     * List plugins.
     *
     */
    public function testPluginsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pluginsIdGet
     *
     * Get plugin.
     *
     */
    public function testPluginsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for statisticsGet
     *
     * Get database statistics.
     *
     */
    public function testStatisticsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for systemGet
     *
     * Get system information.
     *
     */
    public function testSystemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsAcceptedTransferSyntaxesGet
     *
     * Get accepted transfer syntaxes.
     *
     */
    public function testToolsAcceptedTransferSyntaxesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsAcceptedTransferSyntaxesPut
     *
     * Set accepted transfer syntaxes.
     *
     */
    public function testToolsAcceptedTransferSyntaxesPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsBulkAnonymizePost
     *
     * Anonymize a set of resources.
     *
     */
    public function testToolsBulkAnonymizePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsBulkContentPost
     *
     * Describe a set of resources.
     *
     */
    public function testToolsBulkContentPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsBulkDeletePost
     *
     * Delete a set of resources.
     *
     */
    public function testToolsBulkDeletePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsBulkModifyPost
     *
     * Modify a set of resources.
     *
     */
    public function testToolsBulkModifyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsCreateArchivePost
     *
     * Create ZIP archive.
     *
     */
    public function testToolsCreateArchivePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsCreateDicomPost
     *
     * Create one DICOM instance.
     *
     */
    public function testToolsCreateDicomPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsCreateMediaExtendedPost
     *
     * Create DICOMDIR media.
     *
     */
    public function testToolsCreateMediaExtendedPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsCreateMediaPost
     *
     * Create DICOMDIR media.
     *
     */
    public function testToolsCreateMediaPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsDefaultEncodingGet
     *
     * Get default encoding.
     *
     */
    public function testToolsDefaultEncodingGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsDefaultEncodingPut
     *
     * Set default encoding.
     *
     */
    public function testToolsDefaultEncodingPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsDicomConformanceGet
     *
     * Get DICOM conformance.
     *
     */
    public function testToolsDicomConformanceGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsDicomEchoPost
     *
     * Trigger C-ECHO SCU.
     *
     */
    public function testToolsDicomEchoPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsExecuteScriptPost
     *
     * Execute Lua script.
     *
     */
    public function testToolsExecuteScriptPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsFindPost
     *
     * Look for local resources.
     *
     */
    public function testToolsFindPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsGenerateUidGet
     *
     * Generate an identifier.
     *
     */
    public function testToolsGenerateUidGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsInvalidateTagsPost
     *
     * Invalidate DICOM-as-JSON summaries.
     *
     */
    public function testToolsInvalidateTagsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsLookupPost
     *
     * Look for DICOM identifiers.
     *
     */
    public function testToolsLookupPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsMetricsGet
     *
     * Are metrics collected?.
     *
     */
    public function testToolsMetricsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsMetricsPrometheusGet
     *
     * Get usage metrics.
     *
     */
    public function testToolsMetricsPrometheusGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsMetricsPut
     *
     * Enable collection of metrics.
     *
     */
    public function testToolsMetricsPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsNowGet
     *
     * Get UTC time.
     *
     */
    public function testToolsNowGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsNowLocalGet
     *
     * Get local time.
     *
     */
    public function testToolsNowLocalGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsReconstructPost
     *
     * Reconstruct all the index.
     *
     */
    public function testToolsReconstructPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsResetPost
     *
     * Restart Orthanc.
     *
     */
    public function testToolsResetPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsShutdownPost
     *
     * Shutdown Orthanc.
     *
     */
    public function testToolsShutdownPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsUnknownSopClassAcceptedGet
     *
     * Is unknown SOP class accepted?.
     *
     */
    public function testToolsUnknownSopClassAcceptedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toolsUnknownSopClassAcceptedPut
     *
     * Set unknown SOP class accepted.
     *
     */
    public function testToolsUnknownSopClassAcceptedPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
