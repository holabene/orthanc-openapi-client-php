<?php
/**
 * InstancesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Orthanc API
 *
 * This is the full documentation of the [REST API](https://book.orthanc-server.com/users/rest.html) of Orthanc.<p>This reference is automatically generated from the source code of Orthanc. A [shorter cheat sheet](https://book.orthanc-server.com/users/rest-cheatsheet.html) is part of the Orthanc Book.<p>An earlier, manually crafted version from August 2019, is [still available](2019-08-orthanc-openapi.html), but is not up-to-date anymore ([source](https://groups.google.com/g/orthanc-users/c/NUiJTEICSl8/m/xKeqMrbqAAAJ)).
 *
 * The version of the OpenAPI document: 1.11.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InstancesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InstancesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for instancesGet
     *
     * List the available instances.
     *
     */
    public function testInstancesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAnonymizePost
     *
     * Anonymize instance.
     *
     */
    public function testInstancesIdAnonymizePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsGet
     *
     * List attachments.
     *
     */
    public function testInstancesIdAttachmentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameCompressPost
     *
     * Compress attachment.
     *
     */
    public function testInstancesIdAttachmentsNameCompressPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameCompressedDataGet
     *
     * Get attachment (no decompression).
     *
     */
    public function testInstancesIdAttachmentsNameCompressedDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameCompressedMd5Get
     *
     * Get MD5 of attachment on disk.
     *
     */
    public function testInstancesIdAttachmentsNameCompressedMd5Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameCompressedSizeGet
     *
     * Get size of attachment on disk.
     *
     */
    public function testInstancesIdAttachmentsNameCompressedSizeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameDataGet
     *
     * Get attachment.
     *
     */
    public function testInstancesIdAttachmentsNameDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameDelete
     *
     * Delete attachment.
     *
     */
    public function testInstancesIdAttachmentsNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameInfoGet
     *
     * Get info about the attachment.
     *
     */
    public function testInstancesIdAttachmentsNameInfoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameIsCompressedGet
     *
     * Is attachment compressed?.
     *
     */
    public function testInstancesIdAttachmentsNameIsCompressedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameMd5Get
     *
     * Get MD5 of attachment.
     *
     */
    public function testInstancesIdAttachmentsNameMd5Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNamePut
     *
     * Set attachment.
     *
     */
    public function testInstancesIdAttachmentsNamePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameSizeGet
     *
     * Get size of attachment.
     *
     */
    public function testInstancesIdAttachmentsNameSizeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameUncompressPost
     *
     * Uncompress attachment.
     *
     */
    public function testInstancesIdAttachmentsNameUncompressPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdAttachmentsNameVerifyMd5Post
     *
     * Verify attachment.
     *
     */
    public function testInstancesIdAttachmentsNameVerifyMd5Post()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdContentGet
     *
     * Get raw tag.
     *
     */
    public function testInstancesIdContentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdDelete
     *
     * Delete some instance.
     *
     */
    public function testInstancesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdExportPost
     *
     * Write DICOM onto filesystem.
     *
     */
    public function testInstancesIdExportPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFileGet
     *
     * Download DICOM.
     *
     */
    public function testInstancesIdFileGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameImageInt16Get
     *
     * Decode a frame (int16).
     *
     */
    public function testInstancesIdFramesFrameImageInt16Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameImageUint16Get
     *
     * Decode a frame (uint16).
     *
     */
    public function testInstancesIdFramesFrameImageUint16Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameImageUint8Get
     *
     * Decode a frame (uint8).
     *
     */
    public function testInstancesIdFramesFrameImageUint8Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameMatlabGet
     *
     * Decode frame for Matlab.
     *
     */
    public function testInstancesIdFramesFrameMatlabGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameNumpyGet
     *
     * Decode frame for numpy.
     *
     */
    public function testInstancesIdFramesFrameNumpyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFramePreviewGet
     *
     * Decode a frame (preview).
     *
     */
    public function testInstancesIdFramesFramePreviewGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameRawGet
     *
     * Access raw frame.
     *
     */
    public function testInstancesIdFramesFrameRawGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameRawGzGet
     *
     * Access raw frame (compressed).
     *
     */
    public function testInstancesIdFramesFrameRawGzGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesFrameRenderedGet
     *
     * Render a frame.
     *
     */
    public function testInstancesIdFramesFrameRenderedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdFramesGet
     *
     * List available frames.
     *
     */
    public function testInstancesIdFramesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdGet
     *
     * Get information about some instance.
     *
     */
    public function testInstancesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdHeaderGet
     *
     * Get DICOM meta-header.
     *
     */
    public function testInstancesIdHeaderGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdImageInt16Get
     *
     * Decode an image (int16).
     *
     */
    public function testInstancesIdImageInt16Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdImageUint16Get
     *
     * Decode an image (uint16).
     *
     */
    public function testInstancesIdImageUint16Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdImageUint8Get
     *
     * Decode an image (uint8).
     *
     */
    public function testInstancesIdImageUint8Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdMatlabGet
     *
     * Decode frame for Matlab.
     *
     */
    public function testInstancesIdMatlabGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdMetadataGet
     *
     * List metadata.
     *
     */
    public function testInstancesIdMetadataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdMetadataNameDelete
     *
     * Delete metadata.
     *
     */
    public function testInstancesIdMetadataNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdMetadataNameGet
     *
     * Get metadata.
     *
     */
    public function testInstancesIdMetadataNameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdMetadataNamePut
     *
     * Set metadata.
     *
     */
    public function testInstancesIdMetadataNamePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdModifyPost
     *
     * Modify instance.
     *
     */
    public function testInstancesIdModifyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdModuleGet
     *
     * Get instance module.
     *
     */
    public function testInstancesIdModuleGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdNumpyGet
     *
     * Decode instance for numpy.
     *
     */
    public function testInstancesIdNumpyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdPatientGet
     *
     * Get parent patient.
     *
     */
    public function testInstancesIdPatientGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdPdfGet
     *
     * Get embedded PDF.
     *
     */
    public function testInstancesIdPdfGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdPreviewGet
     *
     * Decode an image (preview).
     *
     */
    public function testInstancesIdPreviewGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdReconstructPost
     *
     * Reconstruct tags & optionally files of instance.
     *
     */
    public function testInstancesIdReconstructPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdRenderedGet
     *
     * Render an image.
     *
     */
    public function testInstancesIdRenderedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdSeriesGet
     *
     * Get parent series.
     *
     */
    public function testInstancesIdSeriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdSimplifiedTagsGet
     *
     * Get human-readable tags.
     *
     */
    public function testInstancesIdSimplifiedTagsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdStatisticsGet
     *
     * Get instance statistics.
     *
     */
    public function testInstancesIdStatisticsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdStudyGet
     *
     * Get parent study.
     *
     */
    public function testInstancesIdStudyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesIdTagsGet
     *
     * Get DICOM tags.
     *
     */
    public function testInstancesIdTagsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for instancesPost
     *
     * Upload DICOM instances.
     *
     */
    public function testInstancesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
