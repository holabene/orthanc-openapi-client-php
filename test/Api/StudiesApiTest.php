<?php
/**
 * StudiesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Orthanc API
 *
 * This is the full documentation of the [REST API](https://book.orthanc-server.com/users/rest.html) of Orthanc.<p>This reference is automatically generated from the source code of Orthanc. A [shorter cheat sheet](https://book.orthanc-server.com/users/rest-cheatsheet.html) is part of the Orthanc Book.<p>An earlier, manually crafted version from August 2019, is [still available](2019-08-orthanc-openapi.html), but is not up-to-date anymore ([source](https://groups.google.com/g/orthanc-users/c/NUiJTEICSl8/m/xKeqMrbqAAAJ)).
 *
 * The version of the OpenAPI document: 1.11.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * StudiesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class StudiesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for studiesGet
     *
     * List the available studies.
     *
     */
    public function testStudiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAnonymizePost
     *
     * Anonymize study.
     *
     */
    public function testStudiesIdAnonymizePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdArchiveGet
     *
     * Create ZIP archive.
     *
     */
    public function testStudiesIdArchiveGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdArchivePost
     *
     * Create ZIP archive.
     *
     */
    public function testStudiesIdArchivePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsGet
     *
     * List attachments.
     *
     */
    public function testStudiesIdAttachmentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameCompressPost
     *
     * Compress attachment.
     *
     */
    public function testStudiesIdAttachmentsNameCompressPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameCompressedDataGet
     *
     * Get attachment (no decompression).
     *
     */
    public function testStudiesIdAttachmentsNameCompressedDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameCompressedMd5Get
     *
     * Get MD5 of attachment on disk.
     *
     */
    public function testStudiesIdAttachmentsNameCompressedMd5Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameCompressedSizeGet
     *
     * Get size of attachment on disk.
     *
     */
    public function testStudiesIdAttachmentsNameCompressedSizeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameDataGet
     *
     * Get attachment.
     *
     */
    public function testStudiesIdAttachmentsNameDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameDelete
     *
     * Delete attachment.
     *
     */
    public function testStudiesIdAttachmentsNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameInfoGet
     *
     * Get info about the attachment.
     *
     */
    public function testStudiesIdAttachmentsNameInfoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameIsCompressedGet
     *
     * Is attachment compressed?.
     *
     */
    public function testStudiesIdAttachmentsNameIsCompressedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameMd5Get
     *
     * Get MD5 of attachment.
     *
     */
    public function testStudiesIdAttachmentsNameMd5Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNamePut
     *
     * Set attachment.
     *
     */
    public function testStudiesIdAttachmentsNamePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameSizeGet
     *
     * Get size of attachment.
     *
     */
    public function testStudiesIdAttachmentsNameSizeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameUncompressPost
     *
     * Uncompress attachment.
     *
     */
    public function testStudiesIdAttachmentsNameUncompressPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdAttachmentsNameVerifyMd5Post
     *
     * Verify attachment.
     *
     */
    public function testStudiesIdAttachmentsNameVerifyMd5Post()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdDelete
     *
     * Delete some study.
     *
     */
    public function testStudiesIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdGet
     *
     * Get information about some study.
     *
     */
    public function testStudiesIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdInstancesGet
     *
     * Get child instances.
     *
     */
    public function testStudiesIdInstancesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdInstancesTagsGet
     *
     * Get tags of instances.
     *
     */
    public function testStudiesIdInstancesTagsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMediaGet
     *
     * Create DICOMDIR media.
     *
     */
    public function testStudiesIdMediaGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMediaPost
     *
     * Create DICOMDIR media.
     *
     */
    public function testStudiesIdMediaPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMergePost
     *
     * Merge study.
     *
     */
    public function testStudiesIdMergePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMetadataGet
     *
     * List metadata.
     *
     */
    public function testStudiesIdMetadataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMetadataNameDelete
     *
     * Delete metadata.
     *
     */
    public function testStudiesIdMetadataNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMetadataNameGet
     *
     * Get metadata.
     *
     */
    public function testStudiesIdMetadataNameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdMetadataNamePut
     *
     * Set metadata.
     *
     */
    public function testStudiesIdMetadataNamePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdModifyPost
     *
     * Modify study.
     *
     */
    public function testStudiesIdModifyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdModuleGet
     *
     * Get study module.
     *
     */
    public function testStudiesIdModuleGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdModulePatientGet
     *
     * Get patient module of study.
     *
     */
    public function testStudiesIdModulePatientGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdPatientGet
     *
     * Get parent patient.
     *
     */
    public function testStudiesIdPatientGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdReconstructPost
     *
     * Reconstruct tags & optionally files of study.
     *
     */
    public function testStudiesIdReconstructPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdSeriesGet
     *
     * Get child series.
     *
     */
    public function testStudiesIdSeriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdSharedTagsGet
     *
     * Get shared tags.
     *
     */
    public function testStudiesIdSharedTagsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdSplitPost
     *
     * Split study.
     *
     */
    public function testStudiesIdSplitPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for studiesIdStatisticsGet
     *
     * Get study statistics.
     *
     */
    public function testStudiesIdStatisticsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
