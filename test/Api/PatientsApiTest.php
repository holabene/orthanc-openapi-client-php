<?php
/**
 * PatientsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Orthanc API
 *
 * This is the full documentation of the [REST API](https://book.orthanc-server.com/users/rest.html) of Orthanc.<p>This reference is automatically generated from the source code of Orthanc. A [shorter cheat sheet](https://book.orthanc-server.com/users/rest-cheatsheet.html) is part of the Orthanc Book.<p>An earlier, manually crafted version from August 2019, is [still available](2019-08-orthanc-openapi.html), but is not up-to-date anymore ([source](https://groups.google.com/g/orthanc-users/c/NUiJTEICSl8/m/xKeqMrbqAAAJ)).
 *
 * The version of the OpenAPI document: 1.11.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PatientsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PatientsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for patientsGet
     *
     * List the available patients.
     *
     */
    public function testPatientsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAnonymizePost
     *
     * Anonymize patient.
     *
     */
    public function testPatientsIdAnonymizePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdArchiveGet
     *
     * Create ZIP archive.
     *
     */
    public function testPatientsIdArchiveGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdArchivePost
     *
     * Create ZIP archive.
     *
     */
    public function testPatientsIdArchivePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsGet
     *
     * List attachments.
     *
     */
    public function testPatientsIdAttachmentsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameCompressPost
     *
     * Compress attachment.
     *
     */
    public function testPatientsIdAttachmentsNameCompressPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameCompressedDataGet
     *
     * Get attachment (no decompression).
     *
     */
    public function testPatientsIdAttachmentsNameCompressedDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameCompressedMd5Get
     *
     * Get MD5 of attachment on disk.
     *
     */
    public function testPatientsIdAttachmentsNameCompressedMd5Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameCompressedSizeGet
     *
     * Get size of attachment on disk.
     *
     */
    public function testPatientsIdAttachmentsNameCompressedSizeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameDataGet
     *
     * Get attachment.
     *
     */
    public function testPatientsIdAttachmentsNameDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameDelete
     *
     * Delete attachment.
     *
     */
    public function testPatientsIdAttachmentsNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameInfoGet
     *
     * Get info about the attachment.
     *
     */
    public function testPatientsIdAttachmentsNameInfoGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameIsCompressedGet
     *
     * Is attachment compressed?.
     *
     */
    public function testPatientsIdAttachmentsNameIsCompressedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameMd5Get
     *
     * Get MD5 of attachment.
     *
     */
    public function testPatientsIdAttachmentsNameMd5Get()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNamePut
     *
     * Set attachment.
     *
     */
    public function testPatientsIdAttachmentsNamePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameSizeGet
     *
     * Get size of attachment.
     *
     */
    public function testPatientsIdAttachmentsNameSizeGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameUncompressPost
     *
     * Uncompress attachment.
     *
     */
    public function testPatientsIdAttachmentsNameUncompressPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdAttachmentsNameVerifyMd5Post
     *
     * Verify attachment.
     *
     */
    public function testPatientsIdAttachmentsNameVerifyMd5Post()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdDelete
     *
     * Delete some patient.
     *
     */
    public function testPatientsIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdGet
     *
     * Get information about some patient.
     *
     */
    public function testPatientsIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdInstancesGet
     *
     * Get child instances.
     *
     */
    public function testPatientsIdInstancesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdInstancesTagsGet
     *
     * Get tags of instances.
     *
     */
    public function testPatientsIdInstancesTagsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdMediaGet
     *
     * Create DICOMDIR media.
     *
     */
    public function testPatientsIdMediaGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdMediaPost
     *
     * Create DICOMDIR media.
     *
     */
    public function testPatientsIdMediaPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdMetadataGet
     *
     * List metadata.
     *
     */
    public function testPatientsIdMetadataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdMetadataNameDelete
     *
     * Delete metadata.
     *
     */
    public function testPatientsIdMetadataNameDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdMetadataNameGet
     *
     * Get metadata.
     *
     */
    public function testPatientsIdMetadataNameGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdMetadataNamePut
     *
     * Set metadata.
     *
     */
    public function testPatientsIdMetadataNamePut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdModifyPost
     *
     * Modify patient.
     *
     */
    public function testPatientsIdModifyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdModuleGet
     *
     * Get patient module.
     *
     */
    public function testPatientsIdModuleGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdProtectedGet
     *
     * Is the patient protected against recycling?.
     *
     */
    public function testPatientsIdProtectedGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdProtectedPut
     *
     * Protect one patient against recycling.
     *
     */
    public function testPatientsIdProtectedPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdReconstructPost
     *
     * Reconstruct tags & optionally files of patient.
     *
     */
    public function testPatientsIdReconstructPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdSeriesGet
     *
     * Get child series.
     *
     */
    public function testPatientsIdSeriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdSharedTagsGet
     *
     * Get shared tags.
     *
     */
    public function testPatientsIdSharedTagsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdStatisticsGet
     *
     * Get patient statistics.
     *
     */
    public function testPatientsIdStatisticsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patientsIdStudiesGet
     *
     * Get child studies.
     *
     */
    public function testPatientsIdStudiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
